@use 'variables';

// Button mixin
@mixin button-style($bg, $hover-bg, $color: #000) {
  background: $bg;
  color: $color;
  border: none;
  border-radius: variables.$button-radius;
  padding: variables.$button-padding;
  font-size: variables.$button-font;
  cursor: pointer;
  transition: background 0.2s;

  &:hover {
    background: $hover-bg;
  }
}

// Body
body {
  font-family: variables.$font-family;
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
  background: variables.$body-bg;
}

// Calculator
.calculator {
  background: variables.$calculator-bg;
  padding: variables.$calculator-padding;
  border-radius: variables.$calculator-radius;
  box-shadow: variables.$calculator-shadow;
  width: variables.$calculator-width;

  .display {
    width: 100%;
    height: variables.$display-height;
    font-size: variables.$display-font;
    text-align: right;
    margin-bottom: 12px;
    padding: variables.$display-padding;
    border: variables.$display-border;
    border-radius: variables.$display-radius;
    background: variables.$display-bg;
  }

  .buttons {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: 10px;

    button {
      @include button-style(variables.$button-bg, variables.$button-hover-bg);

      &.operator {
        @include button-style(variables.$operator-bg, variables.$operator-hover-bg, #fff);
      }

      &.equal {
        @include button-style(variables.$equal-bg, variables.$equal-hover-bg, #fff);
        grid-row: span 2;
      }

      &.clear {
        @include button-style(variables.$clear-bg, variables.$clear-hover-bg, #fff);
      }

      &.span-2 {
        grid-column: span 2;
      }
    }
  }
}
